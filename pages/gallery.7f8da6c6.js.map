{"mappings":"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","sources":["node_modules/node-vibrant/dist/webpack:/Vibrant/webpack/universalModuleDefinition","node_modules/node-vibrant/dist/webpack:/Vibrant/webpack/bootstrap","node_modules/node-vibrant/dist/webpack:/vibrant-core/src/utils.ts","node_modules/node-vibrant/dist/webpack:/vibrant-core/src/index.ts","node_modules/node-vibrant/dist/webpack:/vibrant-image/src/index.ts","node_modules/node-vibrant/dist/webpack:/vibrant-color/src/index.ts","node_modules/node-vibrant/dist/webpack:/vibrant-color/src/converter.ts","node_modules/node-vibrant/dist/webpack:/Vibrant/src/browser.ts","node_modules/node-vibrant/dist/webpack:/Vibrant/src/config.ts","node_modules/node-vibrant/dist/webpack:/vibrant-core/src/options.ts","node_modules/node-vibrant/dist/webpack:/vibrant-core/src/builder.ts","node_modules/node-vibrant/dist/webpack:/vibrant-image-browser/src/index.ts","node_modules/node-vibrant/dist/webpack:/Vibrant/src/bundle.ts","node_modules/node-vibrant/dist/webpack:/Vibrant/src/pipeline/index.ts","node_modules/node-vibrant/dist/webpack:/vibrant-quantizer-mmcq/src/index.ts","node_modules/node-vibrant/dist/webpack:/vibrant-quantizer-mmcq/src/vbox.ts","node_modules/node-vibrant/dist/webpack:/vibrant-image/src/histogram.ts","node_modules/node-vibrant/dist/webpack:/vibrant-quantizer-mmcq/src/pqueue.ts","node_modules/node-vibrant/dist/webpack:/vibrant-generator-default/src/index.ts","node_modules/node-vibrant/dist/webpack:/vibrant-core/src/pipeline/index.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Vibrant\"] = factory();\n\telse\n\t\troot[\"Vibrant\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 10);\n","export function mapValues<T, R> (o: { [key: string]: T }, mapper: (v: T) => R): { [key: string]: R } {\n  let result: { [key: string]: R } = {}\n\n  for (const key in o) {\n    if (o.hasOwnProperty(key)) {\n      const v = o[key]\n      result[key] = mapper(v)\n    }\n  }\n\n  return result\n}\n\n/**\n * Overwrite values or properties on objects and lists recursively.\n * A shallow copy will be created for each array value.\n */\nexport function assignDeep<T> (target: Partial<T>, ...sources: (Partial<T> | undefined)[]): T {\n  sources.forEach(s => {\n    if (!s) return\n    for (const key in s) {\n      if (s.hasOwnProperty(key)) {\n        const v = s[key] as any\n        if (Array.isArray(v)) {\n          // Shallow copy\n          target[key] = v.slice(0) as any\n        } else if (typeof v === 'object') {\n          if (!target[key]) target[key] = {} as any\n          assignDeep<any>(target[key] as any, v)\n        } else {\n          target[key] = v\n        }\n      }\n    }\n  })\n  return target as T\n}\n","import { Options, buildProcessOptions } from './options'\nimport { Callback } from '@vibrant/types'\nimport { Image, ImageSource } from '@vibrant/image'\n\nimport { Filter, Palette, Swatch } from '@vibrant/color'\n\nimport Builder from './builder'\nimport { Pipeline, ProcessOptions, ProcessResult } from './pipeline'\nimport { assignDeep } from './utils'\n\nexport interface VibrantStatic {\n  from (src: ImageSource): Builder\n}\n\nexport default class Vibrant {\n  private _result: ProcessResult\n  private static _pipeline: Pipeline\n  static use (pipeline: Pipeline) {\n    this._pipeline = pipeline\n  }\n  static DefaultOpts: Partial<Options> = {\n    colorCount: 64,\n    quality: 5,\n    filters: []\n  }\n\n  static from (src: ImageSource): Builder {\n    return new Builder(src)\n  }\n\n  get result () {\n    return this._result\n  }\n\n  opts: Options\n  constructor (private _src: ImageSource, opts?: Partial<Options>) {\n    this.opts = assignDeep({}, Vibrant.DefaultOpts, opts)\n  }\n  private _process (\n    image: Image,\n    opts?: Partial<ProcessOptions>\n  ): Promise<ProcessResult> {\n    let { quantizer } = this.opts\n\n    image.scaleDown(this.opts)\n\n    let processOpts = buildProcessOptions(this.opts, opts)\n\n    return Vibrant._pipeline.process(image.getImageData(), processOpts)\n  }\n  palette (): Palette {\n    return this.swatches()\n  }\n  swatches (): Palette {\n    throw new Error(\n      'Method deprecated. Use `Vibrant.result.palettes[name]` instead'\n    )\n  }\n\n  getPalette (name: string, cb?: Callback<Palette>): Promise<Palette>\n  getPalette (cb?: Callback<Palette>): Promise<Palette>\n  getPalette (): Promise<Palette> {\n    const arg0 = arguments[0]\n    const arg1 = arguments[1]\n    const name = typeof arg0 === 'string' ? arg0 : 'default'\n    const cb = typeof arg0 === 'string' ? arg1 : arg0\n    let image = new this.opts.ImageClass()\n    return image\n      .load(this._src)\n      .then(image => this._process(image, { generators: [name] }))\n      .then(result => {\n        this._result = result\n        return result.palettes[name]\n      })\n      .then(res => {\n        image.remove()\n        if (cb) {\n          cb(undefined, res)\n        }\n        return res\n      })\n      .catch(err => {\n        image.remove()\n        if (cb) {\n          cb(err)\n        }\n        return Promise.reject(err)\n      })\n  }\n  getPalettes (\n    names: string[],\n    cb?: Callback<Palette>\n  ): Promise<{ [name: string]: Palette }>\n  getPalettes (cb?: Callback<Palette>): Promise<{ [name: string]: Palette }>\n  getPalettes (): Promise<{ [name: string]: Palette }> {\n    const arg0 = arguments[0]\n    const arg1 = arguments[1]\n    const names = Array.isArray(arg0) ? arg0 : ['*']\n    const cb = Array.isArray(arg0) ? arg1 : arg0\n    let image = new this.opts.ImageClass()\n    return image\n      .load(this._src)\n      .then(image =>\n        this._process(image, {\n          generators: names\n        })\n      )\n      .then(result => {\n        this._result = result\n        return result.palettes\n      })\n      .then(res => {\n        image.remove()\n        if (cb) {\n          cb(undefined, res)\n        }\n        return res\n      })\n      .catch(err => {\n        image.remove()\n        if (cb) {\n          cb(err)\n        }\n        return Promise.reject(err)\n      })\n  }\n}\n","import { Callback } from '@vibrant/types'\nimport { Filter } from '@vibrant/color'\n\nexport type ImageCallback = Callback<Image>\n\nexport type ImageSource = string | HTMLImageElement | Buffer\n\nexport type Pixels = Uint8ClampedArray | Buffer\nexport interface ImageData {\n  data: Pixels,\n  width: number,\n  height: number\n}\n\nexport interface ImageOptions {\n  quality: number\n  maxDimension: number\n}\n\nexport interface Image {\n  load (image: ImageSource): Promise<Image>\n  clear (): void\n  update (imageData: ImageData): void\n  getWidth (): number\n  getHeight (): number\n  resize (targetWidth: number, targetHeight: number, ratio: number): void\n  getPixelCount (): number\n  getImageData (): ImageData\n  remove (): void\n  scaleDown (opts: ImageOptions): void\n}\n\nexport interface ImageClass {\n  new(): Image\n}\n\nexport abstract class ImageBase implements Image {\n  abstract load (image: ImageSource): Promise<ImageBase>\n  abstract clear (): void\n  abstract update (imageData: ImageData): void\n  abstract getWidth (): number\n  abstract getHeight (): number\n  abstract resize (targetWidth: number, targetHeight: number, ratio: number): void\n  abstract getPixelCount (): number\n  abstract getImageData (): ImageData\n  abstract remove (): void\n\n  scaleDown (opts: ImageOptions): void {\n    let width: number = this.getWidth()\n    let height: number = this.getHeight()\n\n    let ratio: number = 1\n\n    if (opts.maxDimension > 0) {\n      let maxSide: number = Math.max(width, height)\n      if (maxSide > opts.maxDimension) ratio = opts.maxDimension / maxSide\n    } else {\n      ratio = 1 / opts.quality\n    }\n\n    if (ratio < 1) this.resize(width * ratio, height * ratio, ratio)\n  }\n}\n\nexport function applyFilters (imageData: ImageData, filters: Filter[]) {\n  if (filters.length > 0) {\n    let pixels = imageData.data\n    let n = pixels.length / 4\n    let offset\n    let r\n    let g\n    let b\n    let a\n    for (let i = 0; i < n; i++) {\n      offset = i * 4\n      r = pixels[offset + 0]\n      g = pixels[offset + 1]\n      b = pixels[offset + 2]\n      a = pixels[offset + 3]\n      // Mark ignored color\n      for (let j = 0; j < filters.length; j++) {\n        if (!filters[j](r, g, b, a)) {\n          pixels[offset + 3] = 0\n          break\n        }\n      }\n    }\n  }\n\n  return imageData\n}\n","import { rgbToHsl, rgbToHex } from './converter'\n\nexport interface Filter {\n  (red: number, green: number, blue: number, alpha: number): boolean\n}\n\n/**\n * 3d floating pointer vector\n */\nexport type Vec3 = [number, number, number]\n\n/**\n * The layout for a node-vibrant Palette. Allows you to keep track of\n */\nexport interface Palette {\n  Vibrant: Swatch | null\n  Muted: Swatch | null\n  DarkVibrant: Swatch | null\n  DarkMuted: Swatch | null\n  LightVibrant: Swatch | null\n  LightMuted: Swatch | null\n  // ?\n  [name: string]: Swatch | null\n}\n\nexport class Swatch {\n  static applyFilters (colors: Swatch[], filters: Filter[]): Swatch[] {\n    return filters.length > 0\n      ? colors.filter(({ r, g, b }) => {\n        for (let j = 0; j < filters.length; j++) {\n          if (!filters[j](r, g, b, 255)) return false\n        }\n        return true\n      })\n      : colors\n  }\n\n  /**\n   * Make a value copy of a swatch based on a previous one. Returns a new Swatch instance\n   * @param {Swatch} swatch\n   */\n  static clone (swatch: Swatch) {\n    return new Swatch(swatch._rgb, swatch._population)\n  }\n  private _hsl: Vec3\n  private _rgb: Vec3\n  private _yiq: number\n  private _population: number\n  private _hex: string\n\n  /**\n   * The red value in the RGB value\n   */\n  get r (): number {\n    return this._rgb[0]\n  }\n  /**\n   * The green value in the RGB value\n   */\n  get g (): number {\n    return this._rgb[1]\n  }\n  /**\n   * The blue value in the RGB value\n   */\n  get b (): number {\n    return this._rgb[2]\n  }\n  /**\n   * The color value as a rgb value\n   */\n  get rgb (): Vec3 {\n    return this._rgb\n  }\n  /**\n   * The color value as a hsl value\n   */\n  get hsl (): Vec3 {\n    if (!this._hsl) {\n      let [r, g, b] = this._rgb\n      this._hsl = rgbToHsl(r, g, b)\n    }\n    return this._hsl\n  }\n\n  /**\n   * The color value as a hex string\n   */\n  get hex (): string {\n    if (!this._hex) {\n      let [r, g, b] = this._rgb\n      this._hex = rgbToHex(r, g, b)\n    }\n    return this._hex\n  }\n  get population (): number {\n    return this._population\n  }\n\n  /**\n   * Get the JSON object for the swatch\n   */\n  toJSON (): {rgb: Vec3, population: number} {\n    return {\n      rgb: this.rgb,\n      population: this.population\n    }\n  }\n\n  /**\n   * Get the color value as a rgb value\n   * @deprecated Use property instead\n   */\n  // TODO: deprecate internally, use property instead\n  getRgb (): Vec3 {\n    return this._rgb\n  }\n  /**\n   * Get the color value as a hsl value\n   * @deprecated Use property instead\n   */\n  // TODO: deprecate internally, use property instead\n  getHsl (): Vec3 {\n    return this.hsl\n  }\n  /**\n   * @deprecated Use property instead\n   */\n  // TODO: deprecate internally, use property instead\n  getPopulation (): number {\n    return this._population\n  }\n  /**\n   * Get the color value as a hex string\n   * @deprecated Use property instead\n   */\n  // TODO: deprecate internally, use property instead\n  getHex (): string {\n    return this.hex\n  }\n\n  private getYiq (): number {\n    if (!this._yiq) {\n      let rgb = this._rgb\n      this._yiq = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000\n    }\n    return this._yiq\n  }\n\n  private _titleTextColor: string\n  private _bodyTextColor: string\n\n  get titleTextColor () {\n    if (this._titleTextColor) {\n      this._titleTextColor = this.getYiq() < 200 ? '#fff' : '#000'\n    }\n    return this._titleTextColor\n  }\n  get bodyTextColor () {\n    if (this._bodyTextColor) {\n      this._bodyTextColor = this.getYiq() < 150 ? '#fff' : '#000'\n    }\n    return this._bodyTextColor\n  }\n  getTitleTextColor (): string {\n    return this.titleTextColor\n  }\n\n  getBodyTextColor (): string {\n    return this.bodyTextColor\n  }\n\n  constructor (rgb: Vec3, population: number) {\n    this._rgb = rgb\n    this._population = population\n  }\n}\n","import { Vec3 } from './'\n\nexport const DELTAE94_DIFF_STATUS = {\n  NA: 0,\n  PERFECT: 1,\n  CLOSE: 2,\n  GOOD: 10,\n  SIMILAR: 50\n}\n\n/**\n * Converts hex string to RGB\n * @param hex - The hex value you with to get the RGB value of\n * @returns an array in the order of `red, green, blue` numerical values\n */\nexport function hexToRgb (hex: string): Vec3 {\n  let m = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex)\n\n  if (!m) throw new RangeError(`'${hex}' is not a valid hex color`)\n\n  return [m[1], m[2], m[3]].map((s) => parseInt(s, 16)) as Vec3\n}\n\n/**\n * Given values for an RGB color convert to and return a valid HEX string\n * @param r - Red value in RGB\n * @param g - Green value in RGB\n * @param b - Blue value in RGB\n * @returns a valid hex string with pre-pending pound sign\n */\nexport function rgbToHex (r: number, g: number, b: number): string {\n  return '#' + ((1 << 24) + (r << 16) + (g << 8) + b).toString(16).slice(1, 7)\n}\n\n/**\n * Given values for an RGB color convert to and return a valid HSL value\n * @param r - Red value in RGB\n * @param g - Green value in RGB\n * @param b - Blue value in RGB\n * @returns an array in the order of `hue, saturation, light` numerical values\n */\nexport function rgbToHsl (r: number, g: number, b: number): Vec3 {\n  r /= 255\n  g /= 255\n  b /= 255\n  let max = Math.max(r, g, b)\n  let min = Math.min(r, g, b)\n  let h: number = 0\n  let s: number = 0\n  let l = (max + min) / 2\n  if (max !== min) {\n    let d = max - min\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min)\n    switch (max) {\n      case r:\n        h = (g - b) / d + (g < b ? 6 : 0)\n        break\n      case g:\n        h = (b - r) / d + 2\n        break\n      case b:\n        h = (r - g) / d + 4\n        break\n    }\n\n    h /= 6\n  }\n  return [h, s, l]\n}\n\nexport function hslToRgb (h: number, s: number, l: number): Vec3 {\n  let r: number\n  let g: number\n  let b: number\n\n  function hue2rgb (p: number, q: number, t: number): number {\n    if (t < 0) t += 1\n    if (t > 1) t -= 1\n    if (t < 1 / 6) return p + (q - p) * 6 * t\n    if (t < 1 / 2) return q\n    if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6\n    return p\n  }\n\n  if (s === 0) {\n    r = g = b = l\n  } else {\n    let q = l < 0.5 ? l * (1 + s) : l + s - (l * s)\n    let p = 2 * l - q\n    r = hue2rgb(p, q, h + 1 / 3)\n    g = hue2rgb(p, q, h)\n    b = hue2rgb(p, q, h - (1 / 3))\n  }\n  return [\n    r * 255,\n    g * 255,\n    b * 255\n  ]\n}\n\nexport function rgbToXyz (r: number, g: number, b: number): Vec3 {\n  r /= 255\n  g /= 255\n  b /= 255\n  r = r > 0.04045 ? Math.pow((r + 0.005) / 1.055, 2.4) : r / 12.92\n  g = g > 0.04045 ? Math.pow((g + 0.005) / 1.055, 2.4) : g / 12.92\n  b = b > 0.04045 ? Math.pow((b + 0.005) / 1.055, 2.4) : b / 12.92\n\n  r *= 100\n  g *= 100\n  b *= 100\n\n  let x = r * 0.4124 + g * 0.3576 + b * 0.1805\n  let y = r * 0.2126 + g * 0.7152 + b * 0.0722\n  let z = r * 0.0193 + g * 0.1192 + b * 0.9505\n\n  return [x, y, z]\n}\n\nexport function xyzToCIELab (x: number, y: number, z: number): Vec3 {\n  let REF_X = 95.047\n  let REF_Y = 100\n  let REF_Z = 108.883\n\n  x /= REF_X\n  y /= REF_Y\n  z /= REF_Z\n\n  x = x > 0.008856 ? Math.pow(x, 1 / 3) : 7.787 * x + 16 / 116\n  y = y > 0.008856 ? Math.pow(y, 1 / 3) : 7.787 * y + 16 / 116\n  z = z > 0.008856 ? Math.pow(z, 1 / 3) : 7.787 * z + 16 / 116\n\n  let L = 116 * y - 16\n  let a = 500 * (x - y)\n  let b = 200 * (y - z)\n\n  return [L, a, b]\n}\n\nexport function rgbToCIELab (r: number, g: number, b: number): Vec3 {\n  let [x, y, z] = rgbToXyz(r, g, b)\n  return xyzToCIELab(x, y, z)\n}\n\nexport function deltaE94 (lab1: Vec3, lab2: Vec3): number {\n  let WEIGHT_L = 1\n  let WEIGHT_C = 1\n  let WEIGHT_H = 1\n\n  let [L1, a1, b1] = lab1\n  let [L2, a2, b2] = lab2\n  let dL = L1 - L2\n  let da = a1 - a2\n  let db = b1 - b2\n\n  let xC1 = Math.sqrt(a1 * a1 + b1 * b1)\n  let xC2 = Math.sqrt(a2 * a2 + b2 * b2)\n\n  let xDL = L2 - L1\n  let xDC = xC2 - xC1\n  let xDE = Math.sqrt(dL * dL + da * da + db * db)\n\n  let xDH = (Math.sqrt(xDE) > Math.sqrt(Math.abs(xDL)) + Math.sqrt(Math.abs(xDC)))\n    ? Math.sqrt(xDE * xDE - xDL * xDL - xDC * xDC)\n    : 0\n\n  let xSC = 1 + 0.045 * xC1\n  let xSH = 1 + 0.015 * xC1\n\n  xDL /= WEIGHT_L\n  xDC /= WEIGHT_C * xSC\n  xDH /= WEIGHT_H * xSH\n\n  return Math.sqrt(xDL * xDL + xDC * xDC + xDH * xDH)\n}\n\nexport function rgbDiff (rgb1: Vec3, rgb2: Vec3): number {\n  let lab1 = rgbToCIELab.apply(undefined, rgb1)\n  let lab2 = rgbToCIELab.apply(undefined, rgb2)\n  return deltaE94(lab1, lab2)\n}\n\nexport function hexDiff (hex1: string, hex2: string): number {\n  let rgb1 = hexToRgb(hex1)\n  let rgb2 = hexToRgb(hex2)\n\n  return rgbDiff(rgb1, rgb2)\n}\n\nexport function getColorDiffStatus (d: number): string {\n  if (d < DELTAE94_DIFF_STATUS.NA) {\n    return 'N/A'\n  }\n  // Not perceptible by human eyes\n  if (d <= DELTAE94_DIFF_STATUS.PERFECT) {\n    return 'Perfect'\n  }\n  // Perceptible through close observation\n  if (d <= DELTAE94_DIFF_STATUS.CLOSE) {\n    return 'Close'\n  }\n  // Perceptible at a glance\n  if (d <= DELTAE94_DIFF_STATUS.GOOD) {\n    return 'Good'\n  }\n  // Colors are more similar than opposite\n  if (d < DELTAE94_DIFF_STATUS.SIMILAR) {\n    return 'Similar'\n  }\n  return 'Wrong'\n\n}\n","import Vibrant from './config'\nimport BrowserImage from '@vibrant/image-browser'\n\nVibrant.DefaultOpts.ImageClass = BrowserImage\n\nexport = Vibrant\n","import Vibrant from '@vibrant/core'\n\nVibrant.DefaultOpts.quantizer = 'mmcq'\nVibrant.DefaultOpts.generators = ['default']\nVibrant.DefaultOpts.filters = ['default']\n\nexport default Vibrant\n","import { Palette, Swatch, Filter } from '@vibrant/color'\nimport { Image, ImageClass, ImageSource, ImageOptions } from '@vibrant/image'\nimport { Quantizer, QuantizerOptions } from '@vibrant/quantizer'\nimport { Generator } from '@vibrant/generator'\nimport { StageOptions, ProcessOptions } from './pipeline'\nimport { assignDeep } from './utils'\n\nexport interface Options extends ImageOptions, QuantizerOptions {\n  useWorker: boolean\n  ImageClass: ImageClass\n  quantizer: string | StageOptions\n  generators: (string | StageOptions)[]\n  filters: string[]\n}\n\nexport function buildProcessOptions (opts: Options, override?: Partial<ProcessOptions>): ProcessOptions {\n  let { colorCount, quantizer, generators, filters } = opts\n  // Merge with common quantizer options\n  let commonQuantizerOpts = { colorCount }\n  let q = typeof quantizer === 'string'\n    ? { name: quantizer, options: {} }\n    : quantizer\n  q.options = assignDeep({}, commonQuantizerOpts, q.options)\n\n  return assignDeep({}, {\n    quantizer: q,\n    generators,\n    filters\n  }, override)\n}\n","import {\n  Options\n} from './options'\nimport {\n  Callback\n} from '@vibrant/types'\nimport {\n  ImageClass,\n  ImageSource\n} from '@vibrant/image'\n\nimport {\n  Filter,\n  Palette\n} from '@vibrant/color'\nimport Vibrant from './'\nimport { assignDeep } from './utils'\n\nexport default class Builder {\n  private _src: ImageSource\n  private _opts: Partial<Options>\n  constructor (src: ImageSource, opts: Partial<Options> = {}) {\n    this._src = src\n    this._opts = assignDeep({}, Vibrant.DefaultOpts, opts)\n  }\n\n  maxColorCount (n: number): Builder {\n    this._opts.colorCount = n\n    return this\n  }\n\n  maxDimension (d: number): Builder {\n    this._opts.maxDimension = d\n    return this\n  }\n\n  addFilter (name: string): Builder {\n    if (!this._opts.filters) {\n      this._opts.filters = [name]\n    } else {\n      this._opts.filters.push(name)\n    }\n    return this\n  }\n\n  removeFilter (name: string): Builder {\n    if (this._opts.filters) {\n      let i = this._opts.filters.indexOf(name)\n      if (i > 0) this._opts.filters.splice(i)\n    }\n    return this\n  }\n\n  clearFilters (): Builder {\n    this._opts.filters = []\n    return this\n  }\n\n  quality (q: number): Builder {\n    this._opts.quality = q\n    return this\n  }\n\n  useImageClass (imageClass: ImageClass): Builder {\n    this._opts.ImageClass = imageClass\n    return this\n  }\n\n  useGenerator (generator: string, options?: any): Builder {\n    if (!this._opts.generators) this._opts.generators = []\n    this._opts.generators.push(options ? { name: generator, options } : generator)\n    return this\n  }\n\n  useQuantizer (quantizer: string, options?: any): Builder {\n    this._opts.quantizer = options ? { name: quantizer, options } : quantizer\n    return this\n  }\n\n  build (): Vibrant {\n    return new Vibrant(this._src, this._opts)\n  }\n\n  getPalette (cb?: Callback<Palette>): Promise<Palette> {\n    return this.build().getPalette(cb)\n  }\n  getSwatches (cb?: Callback<Palette>): Promise<Palette> {\n    return this.build().getPalette(cb)\n  }\n}\n","import {\n  ImageOptions,\n  ImageData as VibrantImageData,\n  ImageSource,\n  ImageCallback,\n  ImageBase\n} from '@vibrant/image'\n\nfunction isRelativeUrl (url: string): boolean {\n  let u = new URL(url, location.href)\n  return u.protocol === location.protocol &&\n    u.host === location.host &&\n    u.port === location.port\n}\n\nfunction isSameOrigin (a: string, b: string): boolean {\n  let ua = new URL(a)\n  let ub = new URL(b)\n\n  // https://developer.mozilla.org/en-US/docs/Web/Security/Same-origin_policy\n  return (\n    ua.protocol === ub.protocol &&\n    ua.hostname === ub.hostname &&\n    ua.port === ub.port\n  )\n}\n\nexport default class BrowserImage extends ImageBase {\n  image: HTMLImageElement\n  private _canvas: HTMLCanvasElement\n  private _context: CanvasRenderingContext2D\n  private _width: number\n  private _height: number\n  private _initCanvas (): void {\n    const img = this.image\n    const canvas = (this._canvas = document.createElement('canvas'))\n    const context = (canvas.getContext('2d'))\n\n    if (!context) throw new ReferenceError('Failed to create canvas context')\n\n    this._context = context\n\n    canvas.className = '@vibrant/canvas'\n    canvas.style.display = 'none'\n\n    this._width = canvas.width = img.width\n    this._height = canvas.height = img.height\n\n    context.drawImage(img, 0, 0)\n\n    document.body.appendChild(canvas)\n  }\n  load (image: ImageSource): Promise<ImageBase> {\n    let img: HTMLImageElement\n    let src: string\n    if (typeof image === 'string') {\n      img = document.createElement('img')\n      src = image\n\n      if (!isRelativeUrl(src) && !isSameOrigin(window.location.href, src)) {\n        img.crossOrigin = 'anonymous'\n      }\n\n      img.src = src\n    } else if (image instanceof HTMLImageElement) {\n      img = image\n      src = image.src\n    } else {\n      return Promise.reject(\n        new Error(`Cannot load buffer as an image in browser`)\n      )\n    }\n    this.image = img\n\n    return new Promise<ImageBase>((resolve, reject) => {\n      let onImageLoad = () => {\n        this._initCanvas()\n        resolve(this)\n      }\n\n      if (img.complete) {\n        // Already loaded\n        onImageLoad()\n      } else {\n        img.onload = onImageLoad\n        img.onerror = e => reject(new Error(`Fail to load image: ${src}`))\n      }\n    })\n  }\n  clear (): void {\n    this._context.clearRect(0, 0, this._width, this._height)\n  }\n  update (imageData: VibrantImageData): void {\n    this._context.putImageData(imageData as ImageData, 0, 0)\n  }\n  getWidth (): number {\n    return this._width\n  }\n  getHeight (): number {\n    return this._height\n  }\n  resize (targetWidth: number, targetHeight: number, ratio: number): void {\n    let { _canvas: canvas, _context: context, image: img } = this\n\n    this._width = canvas.width = targetWidth\n    this._height = canvas.height = targetHeight\n\n    context.scale(ratio, ratio)\n    context.drawImage(img, 0, 0)\n  }\n  getPixelCount (): number {\n    return this._width * this._height\n  }\n  getImageData (): ImageData {\n    return this._context.getImageData(0, 0, this._width, this._height)\n  }\n  remove (): void {\n    if (this._canvas && this._canvas.parentNode) {\n      this._canvas.parentNode.removeChild(this._canvas)\n    }\n  }\n}\n","import Vibrant = require('./browser')\nimport pipeline from './pipeline'\n\nVibrant.use(pipeline)\n\nexport = Vibrant\n","import MMCQ from '@vibrant/quantizer-mmcq'\nimport DefaultGenerator from '@vibrant/generator-default'\n\nimport { BasicPipeline } from '@vibrant/core/lib/pipeline'\n\nconst pipeline = new BasicPipeline()\n  .filter.register('default', (r: number, g: number, b: number, a: number) =>\n    a >= 125\n    && !(r > 250 && g > 250 && b > 250)\n  )\n  .quantizer.register('mmcq', MMCQ)\n  .generator.register('default', DefaultGenerator)\n\nexport default pipeline\n","import { Quantizer, QuantizerOptions } from '@vibrant/quantizer'\nimport {\n  Pixels\n} from '@vibrant/image'\nimport { Filter, Swatch } from '@vibrant/color'\nimport VBox from './vbox'\nimport PQueue from './pqueue'\n\nconst fractByPopulations = 0.75\n\nfunction _splitBoxes (pq: PQueue<VBox>, target: number): void {\n  let lastSize = pq.size()\n  while (pq.size() < target) {\n    let vbox = pq.pop()\n\n    if (vbox && vbox.count() > 0) {\n      let [vbox1, vbox2] = vbox.split()\n\n      pq.push(vbox1)\n      if (vbox2 && vbox2.count() > 0) pq.push(vbox2)\n\n      // No more new boxes, converged\n      if (pq.size() === lastSize) {\n        break\n      } else {\n        lastSize = pq.size()\n      }\n    } else {\n      break\n    }\n  }\n}\n\nconst MMCQ = (pixels: Pixels, opts: QuantizerOptions): Array<Swatch> => {\n  if (pixels.length === 0 || opts.colorCount < 2 || opts.colorCount > 256) {\n    throw new Error('Wrong MMCQ parameters')\n  }\n\n  let vbox = VBox.build(pixels)\n  let colorCount = vbox.histogram.colorCount\n  let pq = new PQueue<VBox>((a, b) => a.count() - b.count())\n\n  pq.push(vbox)\n\n  // first set of colors, sorted by population\n  _splitBoxes(pq, fractByPopulations * opts.colorCount)\n\n  // Re-order\n  let pq2 = new PQueue<VBox>((a, b) => a.count() * a.volume() - b.count() * b.volume())\n  pq2.contents = pq.contents\n\n  // next set - generate the median cuts using the (npix * vol) sorting.\n  _splitBoxes(pq2, opts.colorCount - pq2.size())\n\n  // calculate the actual colors\n  return generateSwatches(pq2)\n}\n\nfunction generateSwatches (pq: PQueue<VBox>) {\n  let swatches: Swatch[] = []\n  while (pq.size()) {\n    let v = pq.pop()!\n    let color = v.avg()\n    let [r, g, b] = color\n    swatches.push(new Swatch(color, v.count()))\n  }\n  return swatches\n}\n\nexport default MMCQ\n","import { Vec3, Filter } from '@vibrant/color'\nimport { Pixels } from '@vibrant/image'\nimport Histogram from '@vibrant/image/lib/histogram'\nexport interface Dimension {\n  r1: number\n  r2: number\n  g1: number\n  g2: number\n  b1: number\n  b2: number\n  [d: string]: number\n}\n\nconst SIGBITS = 5\nconst RSHIFT = 8 - SIGBITS\n\nexport default class VBox {\n  static build (pixels: Pixels): VBox {\n    let h = new Histogram(pixels, { sigBits: SIGBITS })\n    let { rmin, rmax, gmin, gmax, bmin, bmax } = h\n    return new VBox(rmin, rmax, gmin, gmax, bmin, bmax, h)\n  }\n\n  dimension: Dimension\n\n  private _volume = -1\n  private _avg: Vec3 | null\n  private _count = -1\n\n  constructor (\n    r1: number, r2: number,\n    g1: number, g2: number,\n    b1: number, b2: number,\n    public histogram: Histogram\n  ) {\n    // NOTE: dimension will be mutated by split operation.\n    //       It must be specified explicitly, not from histogram\n    this.dimension = { r1, r2, g1, g2, b1, b2 }\n  }\n\n  invalidate (): void {\n    this._volume = this._count = -1\n    this._avg = null\n  }\n\n  volume (): number {\n    if (this._volume < 0) {\n      let { r1, r2, g1, g2, b1, b2 } = this.dimension\n      this._volume = (r2 - r1 + 1) * (g2 - g1 + 1) * (b2 - b1 + 1)\n    }\n    return this._volume\n  }\n\n  count (): number {\n    if (this._count < 0) {\n      let { hist, getColorIndex } = this.histogram\n      let { r1, r2, g1, g2, b1, b2 } = this.dimension\n      let c = 0\n\n      for (let r = r1; r <= r2; r++) {\n        for (let g = g1; g <= g2; g++) {\n          for (let b = b1; b <= b2; b++) {\n            let index = getColorIndex(r, g, b)\n            c += hist[index]\n          }\n        }\n      }\n      this._count = c\n    }\n    return this._count\n  }\n\n  clone (): VBox {\n    let { histogram } = this\n    let { r1, r2, g1, g2, b1, b2 } = this.dimension\n    return new VBox(r1, r2, g1, g2, b1, b2, histogram)\n  }\n\n  avg (): Vec3 {\n    if (!this._avg) {\n      let { hist, getColorIndex } = this.histogram\n      let { r1, r2, g1, g2, b1, b2 } = this.dimension\n      let ntot = 0\n      let mult = 1 << (8 - SIGBITS)\n      let rsum: number\n      let gsum: number\n      let bsum: number\n      rsum = gsum = bsum = 0\n\n      for (let r = r1; r <= r2; r++) {\n        for (let g = g1; g <= g2; g++) {\n          for (let b = b1; b <= b2; b++) {\n            let index = getColorIndex(r, g, b)\n            let h = hist[index]\n            ntot += h\n            rsum += (h * (r + 0.5) * mult)\n            gsum += (h * (g + 0.5) * mult)\n            bsum += (h * (b + 0.5) * mult)\n          }\n        }\n      }\n      if (ntot) {\n        this._avg = [\n          ~~(rsum / ntot),\n          ~~(gsum / ntot),\n          ~~(bsum / ntot)\n        ]\n      } else {\n        this._avg = [\n          ~~(mult * (r1 + r2 + 1) / 2),\n          ~~(mult * (g1 + g2 + 1) / 2),\n          ~~(mult * (b1 + b2 + 1) / 2)\n        ]\n      }\n\n    }\n    return this._avg\n  }\n\n  contains (rgb: Vec3): boolean {\n    let [r, g, b] = rgb\n    let { r1, r2, g1, g2, b1, b2 } = this.dimension\n    r >>= RSHIFT\n    g >>= RSHIFT\n    b >>= RSHIFT\n\n    return r >= r1 && r <= r2\n      && g >= g1 && g <= g2\n      && b >= b1 && b <= b2\n  }\n\n  split (): VBox[] {\n    let { hist, getColorIndex } = this.histogram\n    let { r1, r2, g1, g2, b1, b2 } = this.dimension\n    let count = this.count()\n    if (!count) return []\n    if (count === 1) return [this.clone()]\n    let rw = r2 - r1 + 1\n    let gw = g2 - g1 + 1\n    let bw = b2 - b1 + 1\n\n    let maxw = Math.max(rw, gw, bw)\n    let accSum: Uint32Array | null = null\n    let sum: number\n    let total: number\n    sum = total = 0\n\n    let maxd: 'r' | 'g' | 'b' | null = null\n\n    if (maxw === rw) {\n      maxd = 'r'\n      accSum = new Uint32Array(r2 + 1)\n      for (let r = r1; r <= r2; r++) {\n        sum = 0\n        for (let g = g1; g <= g2; g++) {\n          for (let b = b1; b <= b2; b++) {\n            let index = getColorIndex(r, g, b)\n            sum += hist[index]\n          }\n        }\n        total += sum\n        accSum[r] = total\n      }\n    } else if (maxw === gw) {\n      maxd = 'g'\n      accSum = new Uint32Array(g2 + 1)\n      for (let g = g1; g <= g2; g++) {\n        sum = 0\n        for (let r = r1; r <= r2; r++) {\n          for (let b = b1; b <= b2; b++) {\n            let index = getColorIndex(r, g, b)\n            sum += hist[index]\n          }\n        }\n        total += sum\n        accSum[g] = total\n      }\n    } else {\n      maxd = 'b'\n      accSum = new Uint32Array(b2 + 1)\n      for (let b = b1; b <= b2; b++) {\n        sum = 0\n        for (let r = r1; r <= r2; r++) {\n          for (let g = g1; g <= g2; g++) {\n            let index = getColorIndex(r, g, b)\n            sum += hist[index]\n          }\n        }\n        total += sum\n        accSum[b] = total\n      }\n    }\n\n    let splitPoint = -1\n    let reverseSum = new Uint32Array(accSum.length)\n    for (let i = 0; i < accSum.length; i++) {\n      let d = accSum[i]\n      if (splitPoint < 0 && d > total / 2) splitPoint = i\n      reverseSum[i] = total - d\n    }\n\n    let vbox = this\n\n    function doCut (d: string): VBox[] {\n      let dim1 = d + '1'\n      let dim2 = d + '2'\n      let d1 = vbox.dimension[dim1]\n      let d2 = vbox.dimension[dim2]\n      let vbox1 = vbox.clone()\n      let vbox2 = vbox.clone()\n      let left = splitPoint - d1\n      let right = d2 - splitPoint\n      if (left <= right) {\n        d2 = Math.min(d2 - 1, ~~(splitPoint + right / 2))\n        d2 = Math.max(0, d2)\n      } else {\n        d2 = Math.max(d1, ~~(splitPoint - 1 - left / 2))\n        d2 = Math.min(vbox.dimension[dim2], d2)\n      }\n\n      while (!accSum![d2]) d2++\n\n      let c2 = reverseSum[d2]\n      while (!c2 && accSum![d2 - 1]) c2 = reverseSum[--d2]\n\n      vbox1.dimension[dim2] = d2\n      vbox2.dimension[dim1] = d2 + 1\n\n      return [vbox1, vbox2]\n    }\n\n    return doCut(maxd)\n  }\n\n}\n","import { Pixels } from './index'\n\nexport interface HistogramOptions {\n  sigBits: number\n}\n\nexport default class Histogram {\n  bmin: number\n  bmax: number\n  gmin: number\n  gmax: number\n  rmin: number\n  rmax: number\n  hist: Uint32Array\n  private _colorCount: number\n  get colorCount () { return this._colorCount }\n  getColorIndex: (r: number, g: number, b: number) => number\n  constructor (public pixels: Pixels, public opts: HistogramOptions) {\n    const { sigBits } = opts\n    const getColorIndex = (r: number, g: number, b: number) =>\n      (r << (2 * sigBits)) + (g << sigBits) + b\n\n    this.getColorIndex = getColorIndex\n\n    const rshift = 8 - sigBits\n    const hn = 1 << (3 * sigBits)\n    let hist = new Uint32Array(hn)\n    let rmax: number\n    let rmin: number\n    let gmax: number\n    let gmin: number\n    let bmax: number\n    let bmin: number\n    let r: number\n    let g: number\n    let b: number\n    let a: number\n    rmax = gmax = bmax = 0\n    rmin = gmin = bmin = Number.MAX_VALUE\n    let n = pixels.length / 4\n    let i = 0\n\n    while (i < n) {\n\n      let offset = i * 4\n      i++\n      r = pixels[offset + 0]\n      g = pixels[offset + 1]\n      b = pixels[offset + 2]\n      a = pixels[offset + 3]\n\n      // Ignored pixels' alpha is marked as 0 in filtering stage\n      if (a === 0) continue\n\n      r = r >> rshift\n      g = g >> rshift\n      b = b >> rshift\n\n      let index = getColorIndex(r, g, b)\n      hist[index] += 1\n\n      if (r > rmax) rmax = r\n      if (r < rmin) rmin = r\n      if (g > gmax) gmax = g\n      if (g < gmin) gmin = g\n      if (b > bmax) bmax = b\n      if (b < bmin) bmin = b\n    }\n    this._colorCount = hist.reduce((total, c) => c > 0 ? total + 1 : total, 0)\n    this.hist = hist\n    this.rmax = rmax\n    this.rmin = rmin\n    this.gmax = gmax\n    this.gmin = gmin\n    this.bmax = bmax\n    this.bmin = bmin\n  }\n}\n","export interface PQueueComparator<T> {\n  (a: T, b: T): number\n}\n\nexport default class PQueue<T> {\n  contents: T[]\n  private _sorted: boolean\n  private _comparator: PQueueComparator<T>\n  private _sort (): void {\n    if (!this._sorted) {\n      this.contents.sort(this._comparator)\n      this._sorted = true\n    }\n  }\n\n  constructor (comparator: PQueueComparator<T>) {\n    this._comparator = comparator\n    this.contents = []\n    this._sorted = false\n  }\n\n  push (item: T): void {\n    this.contents.push(item)\n    this._sorted = false\n  }\n\n  peek (index?: number): T {\n    this._sort()\n    index = typeof index === 'number' ? index : this.contents.length - 1\n    return this.contents[index]\n  }\n\n  pop () {\n    this._sort()\n    return this.contents.pop()\n  }\n\n  size (): number {\n    return this.contents.length\n  }\n\n  map<U> (mapper: (item: T, index: number) => any): U[] {\n    this._sort()\n    return this.contents.map(mapper)\n  }\n}\n","import { Swatch, Palette } from '@vibrant/color'\nimport { Generator } from '@vibrant/generator'\nimport { hslToRgb } from '@vibrant/color/lib/converter'\n\ninterface DefaultGeneratorOptions {\n  targetDarkLuma: number,\n  maxDarkLuma: number,\n  minLightLuma: number,\n  targetLightLuma: number,\n  minNormalLuma: number,\n  targetNormalLuma: number,\n  maxNormalLuma: number,\n  targetMutesSaturation: number,\n  maxMutesSaturation: number,\n  targetVibrantSaturation: number,\n  minVibrantSaturation: number,\n  weightSaturation: number,\n  weightLuma: number,\n  weightPopulation: number\n}\n\nconst DefaultOpts: DefaultGeneratorOptions = {\n  targetDarkLuma: 0.26,\n  maxDarkLuma: 0.45,\n  minLightLuma: 0.55,\n  targetLightLuma: 0.74,\n  minNormalLuma: 0.3,\n  targetNormalLuma: 0.5,\n  maxNormalLuma: 0.7,\n  targetMutesSaturation: 0.3,\n  maxMutesSaturation: 0.4,\n  targetVibrantSaturation: 1.0,\n  minVibrantSaturation: 0.35,\n  weightSaturation: 3,\n  weightLuma: 6.5,\n  weightPopulation: 0.5\n}\n\nfunction _findMaxPopulation (swatches: Array<Swatch>): number {\n  let p = 0\n\n  swatches.forEach((s) => {\n    p = Math.max(p, s.population)\n  })\n\n  return p\n}\n\nfunction _isAlreadySelected (palette: Palette, s: Swatch): boolean {\n  return palette.Vibrant === s\n    || palette.DarkVibrant === s\n    || palette.LightVibrant === s\n    || palette.Muted === s\n    || palette.DarkMuted === s\n    || palette.LightMuted === s\n}\n\nfunction _createComparisonValue (\n  saturation: number, targetSaturation: number,\n  luma: number, targetLuma: number,\n  population: number, maxPopulation: number, opts: DefaultGeneratorOptions): number {\n\n  function weightedMean (...values: number[]) {\n    let sum = 0\n    let weightSum = 0\n    for (let i = 0; i < values.length; i += 2) {\n      let value = values[i]\n      let weight = values[i + 1]\n      sum += value * weight\n      weightSum += weight\n    }\n\n    return sum / weightSum\n  }\n\n  function invertDiff (value: number, targetValue: number): number {\n    return 1 - Math.abs(value - targetValue)\n  }\n\n  return weightedMean(\n    invertDiff(saturation, targetSaturation), opts.weightSaturation,\n    invertDiff(luma, targetLuma), opts.weightLuma,\n    population / maxPopulation, opts.weightPopulation\n  )\n\n}\n\nfunction _findColorVariation (palette: Palette, swatches: Array<Swatch>, maxPopulation: number,\n  targetLuma: number,\n  minLuma: number,\n  maxLuma: number,\n  targetSaturation: number,\n  minSaturation: number,\n  maxSaturation: number,\n  opts: DefaultGeneratorOptions): Swatch | null {\n\n  let max: Swatch | null = null\n  let maxValue = 0\n\n  swatches.forEach((swatch) => {\n    let [, s, l] = swatch.hsl\n\n    if (s >= minSaturation && s <= maxSaturation\n      && l >= minLuma && l <= maxLuma\n      && !_isAlreadySelected(palette, swatch)\n    ) {\n      let value = _createComparisonValue(s, targetSaturation, l, targetLuma, swatch.population, maxPopulation, opts)\n\n      if (max === null || value > maxValue) {\n        max = swatch\n        maxValue = value\n      }\n\n    }\n  })\n\n  return max\n}\n\nfunction _generateVariationColors (swatches: Array<Swatch>, maxPopulation: number, opts: DefaultGeneratorOptions): Palette {\n  let palette: Palette = {\n    Vibrant: null,\n    DarkVibrant: null,\n    LightVibrant: null,\n    Muted: null,\n    DarkMuted: null,\n    LightMuted: null\n  }\n  // mVibrantSwatch = findColor(TARGET_NORMAL_LUMA, MIN_NORMAL_LUMA, MAX_NORMAL_LUMA,\n  //     TARGET_VIBRANT_SATURATION, MIN_VIBRANT_SATURATION, 1f)\n  palette.Vibrant = _findColorVariation(palette, swatches, maxPopulation,\n    opts.targetNormalLuma,\n    opts.minNormalLuma,\n    opts.maxNormalLuma,\n    opts.targetVibrantSaturation,\n    opts.minVibrantSaturation,\n    1,\n    opts\n  )\n  // mLightVibrantSwatch = findColor(TARGET_LIGHT_LUMA, MIN_LIGHT_LUMA, 1f,\n  //     TARGET_VIBRANT_SATURATION, MIN_VIBRANT_SATURATION, 1f)\n  palette.LightVibrant = _findColorVariation(palette, swatches, maxPopulation,\n    opts.targetLightLuma,\n    opts.minLightLuma,\n    1,\n    opts.targetVibrantSaturation,\n    opts.minVibrantSaturation,\n    1,\n    opts\n  )\n  // mDarkVibrantSwatch = findColor(TARGET_DARK_LUMA, 0f, MAX_DARK_LUMA,\n  //     TARGET_VIBRANT_SATURATION, MIN_VIBRANT_SATURATION, 1f)\n  palette.DarkVibrant = _findColorVariation(palette, swatches, maxPopulation,\n    opts.targetDarkLuma,\n    0,\n    opts.maxDarkLuma,\n    opts.targetVibrantSaturation,\n    opts.minVibrantSaturation,\n    1,\n    opts\n  )\n  // mMutedSwatch = findColor(TARGET_NORMAL_LUMA, MIN_NORMAL_LUMA, MAX_NORMAL_LUMA,\n  //     TARGET_MUTED_SATURATION, 0f, MAX_MUTED_SATURATION)\n  palette.Muted = _findColorVariation(palette, swatches, maxPopulation,\n    opts.targetNormalLuma,\n    opts.minNormalLuma,\n    opts.maxNormalLuma,\n    opts.targetMutesSaturation,\n    0,\n    opts.maxMutesSaturation,\n    opts\n  )\n  // mLightMutedColor = findColor(TARGET_LIGHT_LUMA, MIN_LIGHT_LUMA, 1f,\n  //     TARGET_MUTED_SATURATION, 0f, MAX_MUTED_SATURATION)\n  palette.LightMuted = _findColorVariation(palette, swatches, maxPopulation,\n    opts.targetLightLuma,\n    opts.minLightLuma,\n    1,\n    opts.targetMutesSaturation,\n    0,\n    opts.maxMutesSaturation,\n    opts\n  )\n  // mDarkMutedSwatch = findColor(TARGET_DARK_LUMA, 0f, MAX_DARK_LUMA,\n  //     TARGET_MUTED_SATURATION, 0f, MAX_MUTED_SATURATION)\n  palette.DarkMuted = _findColorVariation(palette, swatches, maxPopulation,\n    opts.targetDarkLuma,\n    0,\n    opts.maxDarkLuma,\n    opts.targetMutesSaturation,\n    0,\n    opts.maxMutesSaturation,\n    opts\n  )\n  return palette\n}\n\nfunction _generateEmptySwatches (palette: Palette, maxPopulation: number, opts: DefaultGeneratorOptions): void {\n  if (!palette.Vibrant && !palette.DarkVibrant && !palette.LightVibrant) {\n    if (!palette.DarkVibrant && palette.DarkMuted) {\n      let [h, s, l] = palette.DarkMuted.hsl\n      l = opts.targetDarkLuma\n      palette.DarkVibrant = new Swatch(hslToRgb(h, s, l), 0)\n    }\n    if (!palette.LightVibrant && palette.LightMuted) {\n      let [h, s, l] = palette.LightMuted.hsl\n      l = opts.targetDarkLuma\n      palette.DarkVibrant = new Swatch(hslToRgb(h, s, l), 0)\n    }\n  }\n  if (!palette.Vibrant && palette.DarkVibrant) {\n    let [h, s, l] = palette.DarkVibrant.hsl\n    l = opts.targetNormalLuma\n    palette.Vibrant = new Swatch(hslToRgb(h, s, l), 0)\n  } else if (!palette.Vibrant && palette.LightVibrant) {\n    let [h, s, l] = palette.LightVibrant.hsl\n    l = opts.targetNormalLuma\n    palette.Vibrant = new Swatch(hslToRgb(h, s, l), 0)\n  }\n  if (!palette.DarkVibrant && palette.Vibrant) {\n    let [h, s, l] = palette.Vibrant.hsl\n    l = opts.targetDarkLuma\n    palette.DarkVibrant = new Swatch(hslToRgb(h, s, l), 0)\n  }\n  if (!palette.LightVibrant && palette.Vibrant) {\n    let [h, s, l] = palette.Vibrant.hsl\n    l = opts.targetLightLuma\n    palette.LightVibrant = new Swatch(hslToRgb(h, s, l), 0)\n  }\n  if (!palette.Muted && palette.Vibrant) {\n    let [h, s, l] = palette.Vibrant.hsl\n    l = opts.targetMutesSaturation\n    palette.Muted = new Swatch(hslToRgb(h, s, l), 0)\n  }\n  if (!palette.DarkMuted && palette.DarkVibrant) {\n    let [h, s, l] = palette.DarkVibrant.hsl\n    l = opts.targetMutesSaturation\n    palette.DarkMuted = new Swatch(hslToRgb(h, s, l), 0)\n  }\n  if (!palette.LightMuted && palette.LightVibrant) {\n    let [h, s, l] = palette.LightVibrant.hsl\n    l = opts.targetMutesSaturation\n    palette.LightMuted = new Swatch(hslToRgb(h, s, l), 0)\n  }\n}\n\nconst DefaultGenerator: Generator = (swatches: Array<Swatch>, opts?: DefaultGeneratorOptions): Palette => {\n  opts = Object.assign({}, DefaultOpts, opts)\n  let maxPopulation = _findMaxPopulation(swatches)\n\n  let palette = _generateVariationColors(swatches, maxPopulation, opts)\n  _generateEmptySwatches(palette, maxPopulation, opts)\n\n  return palette\n}\n\nexport default DefaultGenerator\n","import { ImageData, applyFilters } from '@vibrant/image'\nimport { Quantizer } from '@vibrant/quantizer'\nimport { Generator } from '@vibrant/generator'\nimport { Palette, Swatch, Filter } from '@vibrant/color'\n\nexport class Stage<T> {\n  private _map: { [name: string]: T } = {}\n  constructor (protected pipeline: BasicPipeline) { }\n  names () {\n    return Object.keys(this._map)\n  }\n  has (name: string) {\n    return !!this._map[name]\n  }\n  get (name: string) {\n    return this._map[name]\n  }\n  register (name: string, stageFn: T) {\n    this._map[name] = stageFn\n    return this.pipeline\n  }\n}\n\nexport interface ProcessResult {\n  colors: Swatch[]\n  palettes: { [name: string]: Palette }\n}\n\nexport interface StageOptions {\n  name: string\n  options?: any\n}\n\nexport interface ProcessOptions {\n  filters: string[]\n  quantizer: string | StageOptions\n  generators: (string | StageOptions)[]\n}\n\ninterface StageTask<Q> {\n  name: string\n  fn: Q\n  options?: any\n}\n\ninterface ProcessTasks {\n  filters: StageTask<Filter>[]\n  quantizer: StageTask<Quantizer>\n  generators: StageTask<Generator>[]\n}\n\nexport interface Pipeline {\n  // quantizer: Stage<Quantizer>\n  // generator: Stage<Generator>\n  process (imageData: ImageData, opts: ProcessOptions): Promise<ProcessResult>\n}\n\nexport class BasicPipeline implements Pipeline {\n  private _buildProcessTasks ({\n    filters,\n    quantizer,\n    generators\n  }: ProcessOptions): ProcessTasks {\n    // Support wildcard for generators\n    if (generators.length === 1 && generators[0] === '*') {\n      generators = this.generator.names()\n    }\n    return {\n      filters: filters.map(f => createTask(this.filter, f)),\n      quantizer: createTask(this.quantizer, quantizer),\n      generators: generators.map(g => createTask(this.generator, g))\n    }\n    function createTask<Q> (\n      stage: Stage<Q>,\n      o: string | StageOptions\n    ): StageTask<Q> {\n      let name: string\n      let options: any\n      if (typeof o === 'string') {\n        name = o\n      } else {\n        name = o.name\n        options = o.options\n      }\n\n      return {\n        name,\n        fn: stage.get(name),\n        options\n      }\n    }\n  }\n  filter: Stage<Filter> = new Stage(this)\n  quantizer: Stage<Quantizer> = new Stage(this)\n  generator: Stage<Generator> = new Stage(this)\n  async process (\n    imageData: ImageData,\n    opts: ProcessOptions\n  ): Promise<ProcessResult> {\n    let { filters, quantizer, generators } = this._buildProcessTasks(opts)\n    const imageFilterData = await this._filterColors(filters, imageData)\n    const colors = await this._generateColors(quantizer, imageFilterData)\n    const palettes = await this._generatePalettes(generators, colors)\n    return {\n      colors,\n      palettes\n    }\n  }\n  private _filterColors (filters: StageTask<Filter>[], imageData: ImageData) {\n    return Promise.resolve(\n      applyFilters(imageData, filters.map(({ fn }) => fn))\n    )\n  }\n  private _generateColors (\n    quantizer: StageTask<Quantizer>,\n    imageData: ImageData\n  ) {\n    return Promise.resolve(quantizer.fn(imageData.data, quantizer.options))\n  }\n  private async _generatePalettes (\n    generators: StageTask<Generator>[],\n    colors: Swatch[]\n  ) {\n    // Make a promise map that will run them \"concurrently\" (but return in expected result)\n    const promiseArr = await Promise.all(\n      generators.map(({ fn, options }) => Promise.resolve(fn(colors, options)))\n    )\n    // Map the values to the expected name\n    return Promise.resolve(\n      promiseArr.reduce(\n        (promises, promiseVal, i) => {\n          promises[generators[i].name] = promiseVal\n          return promises\n        },\n        {} as { [name: string]: Palette }\n      )\n    )\n  }\n}\n"],"names":["root","factory","exports","module","define","amd","window","modules","installedModules","__webpack_require__","moduleId","i","l","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key1","key","bind","n","object","property","prototype","hasOwnProperty","p","s","mapValues","mapper","result","v","assignDeep","target","sources","_i","arguments","length","forEach","Array","isArray","slice","options_1","builder_1","__importDefault","utils_1","Vibrant1","Vibrant","_src","opts","this","DefaultOpts","use","pipeline","_pipeline","from","src","default","_result","_process","image","quantizer","scaleDown","processOpts","buildProcessOptions","process","getImageData","palette","swatches","Error","getPalette","_this","arg0","arg1","cb","image1","ImageClass","load","then","generators","palettes","res","remove","undefined","catch","err","Promise","reject","getPalettes","names","image2","colorCount","quality","filters","ImageBase1","ImageBase","width","getWidth","height","getHeight","ratio","maxDimension","maxSide","Math","max","resize","applyFilters","imageData","pixels","data","offset","g","b","a","j","converter_1","Swatch1","Swatch","rgb","population","_rgb","_population","colors","filter","_a","clone","swatch","_hsl","rgbToHsl","_hex","rgbToHex","toJSON","getRgb","getHsl","hsl","getPopulation","getHex","hex","getYiq","_yiq","_titleTextColor","_bodyTextColor","getTitleTextColor","titleTextColor","getBodyTextColor","bodyTextColor","hexToRgb","exec","RangeError","map","parseInt","rgbToXyz","pow","xyzToCIELab","x","y","z","rgbToCIELab","deltaE94","lab1","lab2","L1","a1","b1","L2","a2","b2","dL","da","db","xC1","sqrt","xDL","xDC","xDE","xDH","abs","rgbDiff","rgb1","rgb2","apply","DELTAE94_DIFF_STATUS","NA","PERFECT","CLOSE","GOOD","SIMILAR","toString","min","h","hslToRgb","hue2rgb","q","q1","p1","hexDiff","hex1","hex2","getColorDiffStatus","config_1","image_browser_1","core_1","override","commonQuantizerOpts","options","_1","Builder1","Builder","_opts","maxColorCount","addFilter","push","removeFilter","indexOf","splice","clearFilters","useImageClass","imageClass","useGenerator","generator","useQuantizer","build","getSwatches","BrowserImage1","_super","BrowserImage","__extends","_initCanvas","img","canvas","_canvas","document","createElement","context","getContext","ReferenceError","_context","className","style","display","_width","_height","drawImage","body","appendChild","ua","ub","u","URL","location","href","protocol","host","port","hostname","crossOrigin","HTMLImageElement","resolve","onImageLoad","complete","onload","onerror","e","clear","clearRect","update","putImageData","targetWidth","targetHeight","scale","getPixelCount","parentNode","removeChild","pipeline_1","quantizer_mmcq_1","generator_default_1","BasicPipeline","register","color_1","vbox_1","pqueue_1","_splitBoxes","pq","lastSize","size","vbox","pop","count","split","vbox1","vbox2","histogram","pq2","volume","contents","color","avg","generateSwatches","histogram_1","VBox1","VBox","r1","r2","g1","g2","_volume","_count","dimension","sigBits","rmin","rmax","gmin","gmax","bmin","bmax","invalidate","_avg","hist","getColorIndex","_b","ntot","rsum","gsum","bsum","contains","sum","total","rw","gw","bw","maxw","accSum","maxd","Uint32Array","splitPoint","reverseSum","dim1","dim2","d1","d2","left","right","c2","doCut","Histogram1","Histogram","r3","g3","b4","rshift","Number","MAX_VALUE","_colorCount","reduce","PQueue1","PQueue","comparator","_comparator","_sorted","_sort","sort","item","peek","index","targetDarkLuma","maxDarkLuma","minLightLuma","targetLightLuma","minNormalLuma","targetNormalLuma","maxNormalLuma","targetMutesSaturation","maxMutesSaturation","targetVibrantSaturation","minVibrantSaturation","weightSaturation","weightLuma","weightPopulation","_findColorVariation","maxPopulation","targetLuma","minLuma","maxLuma","targetSaturation","minSaturation","maxSaturation","maxValue","DarkVibrant","LightVibrant","Muted","DarkMuted","LightMuted","_isAlreadySelected","saturation","luma","invertDiff","targetValue","values","weightSum","weight","weightedMean","_createComparisonValue","assign","_findMaxPopulation","_generateVariationColors","_c","_d","_e","_f","_g","_h","_j","_generateEmptySwatches","image_1","Stage1","Stage","_map","keys","has","stageFn","BasicPipeline1","_buildProcessTasks","f","createTask","stage","fn","_filterColors","imageFilterData","sent","_generateColors","_generatePalettes","all","promiseArr","_a1","promises","promiseVal"],"version":3,"file":"gallery.7f8da6c6.js.map"}